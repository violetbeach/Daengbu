<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.violetbeach.daengbu.repository.chat.ChatRepository">

	<select id="getByUserId" parameterType="Long" resultType="Long">
		SELECT room_id FROM ( 
			SELECT * FROM room_user WHERE room_id IN(
				SELECT room_id FROM room_user WHERE user_id = #{userId1}
			)
		)a WHERE user_id = #{userId2};
	</select>
	
	<select id="getListByUserId" parameterType="Long" resultType="com.violetbeach.daengbu.dto.model.chat.ChatDto">
		SELECT * FROM(
			SELECT * FROM chat WHERE room_id IN (
				SELECT room_id FROM room_user WHERE user_id = #{userId}
			) ORDER BY id DESC limit 18446744073709551615)
		a GROUP BY room_id;
	</select>
	
	<insert id="createRoom" parameterType="com.violetbeach.daengbu.dto.model.chat.RoomDto" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO room VALUES ();
    </insert>
    
    <insert id="addUser" parameterType="Long">
    	INSERT INTO room_user VALUES(#{roomId}, #{userId});
    </insert>
    
    <insert id="addMessage" parameterType="com.violetbeach.daengbu.dto.model.chat.ChatDto" useGeneratedKeys="true" keyProperty="id">
    	INSERT INTO chat(room_id, user_id, message, datetime) VALUES(#{roomId}, #{userId}, #{message}, NOW());
    </insert>
    
    <select id="getOtherUserByUserId" parameterType="Long" resultType="Long">
		SELECT user_id FROM room_user WHERE room_id = #{roomId} AND NOT user_id = #{userId};
	</select>
	
	<select id="getUnreadMessageCount" parameterType="Long" resultType="Integer">
		SELECT COUNT(*) FROM chat WHERE is_read = 0 AND room_id = #{roomId} AND user_id = #{userId};
	</select>
	
	<update id="updateIsRead" parameterType="Long">
		UPDATE chat SET is_read = 1 WHERE room_id = #{roomId} AND NOT user_id = #{userId};
	</update>
	
	<select id="getByRoomId" parameterType="Long" resultType="com.violetbeach.daengbu.dto.model.chat.ChatDto">
		SELECT * FROM chat WHERE room_id = #{roomId};
	</select>
	
	<select id="getTotalUnreadCount" parameterType="Long" resultType="Integer">
		SELECT count(*) FROM chat WHERE room_id IN (
			SELECT room_id FROM room_user WHERE user_id = #{user_id})
    		AND NOT user_id = #{user_id} AND is_read = 0;
	</select>
	
	<delete id="delRoomUser" parameterType="Long">
		DELETE FROM room_user WHERE room_id = #{roomId} AND user_id = #{userId};
	</delete>
	
</mapper>